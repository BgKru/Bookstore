version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookstore_db
      SPRING_DATASOURCE_USERNAME: bookstore_user
      SPRING_DATASOURCE_PASSWORD: securepassword
    ports:
      - "8080:8080"
    networks:
      - bookstore-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app  # Для разработки (опционально)
      - /app/node_modules  # Исключаем перезапись node_modules
    depends_on:
      - backend
    networks:
      - bookstore-network

  nginx:
    image: nginx:alpine
    container_name: bookstore-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    networks:
      - bookstore-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: bookstore_db
      POSTGRES_USER: bookstore_user
      POSTGRES_PASSWORD: securepassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      #- ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookstore_user -d bookstore_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - bookstore-network

networks:
  bookstore-network:
    driver: bridge

volumes:
  postgres_data:
